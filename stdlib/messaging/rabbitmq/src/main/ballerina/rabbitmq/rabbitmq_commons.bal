// Copyright (c) 2019 WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
//
// WSO2 Inc. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

# Types of exchanges supported by the Ballerina RabbitMQ Connector
public type ExchangeType "direct"|"fanout"|"topic"|"headers";

# Constant for the RabbitMQ Direct Exchange type
public const DIRECT_EXCHANGE = "direct";

# Constant for the RabbitMQ Fanout Exchange type
public const FANOUT_EXCHANGE = "fanout";

# Constant for the RabbitMQ Topic Exchange type
public const TOPIC_EXCHANGE = "topic";

# Constant for the RabbitMQ Headers Exchange type
public const HEADERS_EXCHANGE = "headers";

# RabbitMQ Error code
public const string RABBITMQ_ERROR_CODE = "{ballerina/RabbitMQ}RabbitMQError";

# RabbitMQ Error record
#
# + message - Error message
type RabbitMQError record {
    string message;
    !...;
};

# Holds the parameters used to declare a queue.
#
# + queueName - The name of the queue, if not specified then autogenerated
# + durable - true if we are declaring a durable queue (the queue will survive a server restart)
# + exclusive - true if we are declaring an exclusive queue (restricted to this connection)
# + autoDelete - true if we are declaring an autodelete queue (server will delete it when no longer in use)
# + arguments - other properties (construction arguments) for the queue
public type QueueConfiguration record {
    string queueName;
    boolean? durable = false;
    boolean? exclusive = true;
    boolean? autoDelete = true;
    map<any>? arguments = ();
    !...;
};

# Holds the parameters used to declare an exchange
#
# + exchangeName - name of the exchange
# + exchangeType - the type of the exchange
# + durable - true if we are declaring a durable exchange (the exchange will survive a server restart)
public type ExchangeConfiguration record {
    string exchangeName;
    ExchangeType? exchangeType = DIRECT_EXCHANGE;
    boolean? durable = false;
    !...;
};

# Holds the parameters used to create a RabbitMQ connection
#
# + host - The default host used for connections
# + port - The default port used for connections
# + username - The default username used for connections
# + password - The default password used for connections
public type ConnectionConfiguration record {
    string host = "localhost";
    int port = 5672;
    string? username = ();
    string? password = ();
    !...;
};
